from aiogram import F, Router
from aiogram.types import Message, CallbackQuery
from aiogram.filters import CommandStart, Command
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext

import app.keyboards as kb

router = Router()

# –°—Ç–µ–π—Ç –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
class Register(StatesGroup):
    name = State()
    age = State()
    number = State()

@router.message(CommandStart())  # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
async def cmd_start(message: Message):
    await message.answer('–î–æ–±—Ä–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫', reply_markup=kb.main)
    await message.reply('–í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å–≤—É–µ—Ç –≤–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç')

@router.message(Command('help'))  # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help
async def cmd_help(message: Message):
    await message.answer("–í—ã –Ω–∞–∂–∞–ª–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –ø–æ–º–æ—â–∏")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–∞ "–æ –Ω–∞—Å"
@router.message(F.text == "–æ –Ω–∞—Å")
async def about_us(message: Message):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —á–µ–ª–æ–≤–µ–∫–∞ ", reply_markup=kb.about_us)

# Callback –¥–ª—è –≤—ã–±–æ—Ä–∞ –ö–∞–∑–∞—á–µ–Ω–∫–æ
@router.callback_query(F.data == 'Kazachenka')
async def Kazachenka(callback: CallbackQuery):
    await callback.answer("–í—ã –≤—ã–±—Ä–∞–ª–∏ –ö–∞–∑–∞—á–µ–Ω–∫–æ", show_alert=True)
    await callback.message.answer("–ö–∞–∑–∞—á–µ–Ω–∫–æ –í–∞–¥–∏–º –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–∏—á - —Å—Ç—É–¥–µ–Ω—Ç –ë–ì–£–ò–†")

# Callback –¥–ª—è –≤—ã–±–æ—Ä–∞ –ö–æ–≤–∞–ª—å—á—É–∫–∞
@router.callback_query(F.data == 'Kovalchyk')
async def Kovalchyk(callback: CallbackQuery):
    await callback.answer("–í—ã –≤—ã–±—Ä–∞–ª–∏ –û–≤–Ω–∞", show_alert=True)
    await callback.message.answer("–ö–æ–≤–∞–ª—å—á—É–∫ –í–∏–∫—Ç–æ—Ä–∏—è - –ø–µ—Ä—Å–æ–Ω–∞–∂ –µ—â–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é –Ω–µ –æ—Ç–∫—Ä—ã—Ç.")

# Callback –¥–ª—è –≤—ã–±–æ—Ä–∞ –ß–µ—Ä–µ—Ç—É–∫–∞
@router.callback_query(F.data == 'Cheretyk')
async def Cheretyk(callback: CallbackQuery):
    await callback.answer("–í—ã –≤—ã–±—Ä–∞–ª–∏ —á–µ—Ä—Ç–∞", show_alert=True)
    await callback.message.answer("–ß–µ—Ä–µ—Ç—É–∫ (–æ—Ç —Å–ª–æ–≤–∞ –¢–£–ö) - –Ω—É —Ç–∞–∫–æ–π –º—É—Ç–Ω—ã–π —Ç–∏–ø.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–∞ "–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª"
@router.message(F.text == "–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª")
async def about_us(message: Message):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª: ", reply_markup=kb.fuction_keyboard)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback –¥–ª—è –≤—ã–±–æ—Ä–∞ "—Ä–∞—Å—á–µ—Ç –∫–∞–ª–æ—Ä–∏–π"
@router.callback_query(F.data == 'calculate_calories')
async def calculate_calories(callback: CallbackQuery):
    await callback.answer("–í—ã –≤—ã–±—Ä–∞–ª–∏ —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å –∫–∞–ª–æ—Ä–∏–∏ ", show_alert=True)
    await callback.message.answer("–§—É–Ω–∫—Ü–∏—è —Ä–∞—Å—á–µ—Ç–∞ –∫–∞–ª–æ—Ä–∏–π –ø–æ–∫–∞ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback –¥–ª—è –≤—ã–±–æ—Ä–∞ "–º–æ–∏ –¥–∞–Ω–Ω—ã–µ"
@router.callback_query(F.data == 'my_data')
async def my_data(callback: CallbackQuery):
    await callback.answer("–í—ã –≤—ã–±—Ä–∞–ª–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–æ–∏ –¥–∞–Ω–Ω—ã–µ  ", show_alert=True)
    await callback.message.answer("–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –ø–æ–∫–∞ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω—ã.")

# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@router.message(Command('register'))
async def register(message: Message, state: FSMContext):
    await state.set_state(Register.name)
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –ò–º—è: ")

@router.message(Register.name)
async def register_name(message: Message, state: FSMContext):
    await state.update_data(name=message.text)
    await state.set_state(Register.age)
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–∑—Ä–∞—Å—Ç")

@router.message(Register.age)
async def register_age(message: Message, state: FSMContext):
    await state.update_data(age=message.text)
    await state.set_state(Register.number)
    await message.answer("–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", reply_markup=kb.get_number)

@router.message(Register.number, F.contact)
async def register_number(message: Message, state: FSMContext):
    await state.update_data(number=message.contact.phone_number)
    data = await state.get_data()
    await message.answer(f"–í–∞—à–µ –∏–º—è: {data['name']}\n –í–∞—à –≤–æ–∑—Ä–∞—Å—Ç: {data['age']}\n –ù–æ–º–µ—Ä: {data['number']}")
    await state.clear()

# –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
@router.message(F.text == "–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏")
async def send_recommend_menu(message: Message):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π üëá", reply_markup=kb.recommend_keyboard)

@router.callback_query(F.data == "food_recommend")
async def food_recommend(callback: CallbackQuery):
    await callback.message.answer(
        "ü•£ **–ó–∞–≤—Ç—Ä–∞–∫** (07:00‚Äì09:00)\n"
        "‚úÖ –û–≤—Å—è–Ω–∫–∞ –Ω–∞ –≤–æ–¥–µ –∏–ª–∏ –º–æ–ª–æ–∫–µ —Å —Ñ—Ä—É–∫—Ç–∞–º–∏\n"
        "‚úÖ –Ø–π—Ü–∞ (–≤–∞—Ä—ë–Ω—ã–µ –∏–ª–∏ –æ–º–ª–µ—Ç)\n"
        "‚úÖ –¢–æ—Å—Ç –∏–∑ —Ü–µ–ª—å–Ω–æ–∑–µ—Ä–Ω–æ–≤–æ–≥–æ —Ö–ª–µ–±–∞ + –∞–≤–æ–∫–∞–¥–æ\n"
        "‚öñÔ∏è –ö–ë–ñ–£: 30% —É–≥–ª–µ–≤–æ–¥—ã, 30% –±–µ–ª–∫–∏, 40% –∂–∏—Ä—ã\n\n"
        "üç≤ **–û–±–µ–¥** (12:00‚Äì14:00)\n"
        "‚úÖ –û—Ç–≤–∞—Ä–Ω–∞—è –∫—É—Ä–∏–Ω–∞—è –≥—Ä—É–¥–∫–∞ / —Ä—ã–±–∞\n"
        "‚úÖ –†–∏—Å, –∫–∏–Ω–æ–∞, –≥—Ä–µ—á–∫–∞\n"
        "‚úÖ –û–≤–æ—â–Ω–æ–π —Å–∞–ª–∞—Ç —Å –æ–ª–∏–≤–∫–æ–≤—ã–º –º–∞—Å–ª–æ–º\n"
        "‚öñÔ∏è –ö–ë–ñ–£: 40% —É–≥–ª–µ–≤–æ–¥—ã, 35% –±–µ–ª–∫–∏, 25% –∂–∏—Ä—ã\n\n"
        "üçΩ **–£–∂–∏–Ω** (18:00‚Äì20:00)\n"
        "‚úÖ –¢–≤–æ—Ä–æ–≥ —Å —è–≥–æ–¥–∞–º–∏ –∏–ª–∏ –∑–∞–ø–µ—á—ë–Ω–Ω—ã–µ –æ–≤–æ—â–∏ —Å –±–µ–ª–∫–æ–º\n"
        "‚úÖ –°—É–ø-–ø—é—Ä–µ –∏–ª–∏ –æ–º–ª–µ—Ç —Å –∑–µ–ª–µ–Ω—å—é\n"
        "‚öñÔ∏è –ö–ë–ñ–£: 20% —É–≥–ª–µ–≤–æ–¥—ã, 50% –±–µ–ª–∫–∏, 30% –∂–∏—Ä—ã\n\n"
        "ü•õ **–ü–µ—Ä–µ–∫—É—Å**\n"
        "‚úÖ –û—Ä–µ—Ö–∏, —è–±–ª–æ–∫–æ, –∫–µ—Ñ–∏—Ä, –±–∞–Ω–∞–Ω\n"
        "‚úÖ –≠–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏–µ –±–∞—Ç–æ–Ω—á–∏–∫–∏ –±–µ–∑ —Å–∞—Ö–∞—Ä–∞",
        parse_mode="Markdown"
    )
    await callback.answer()

@router.callback_query(F.data == "habits_recommend")
async def habits_recommend(callback: CallbackQuery):
    await callback.message.answer(
        "üåø –ü–æ–ª–µ–∑–Ω—ã–µ –ø—Ä–∏–≤—ã—á–∫–∏ –¥–ª—è –∑–¥–æ—Ä–æ–≤—å—è:\n\n"
        "üö∂‚Äç‚ôÇÔ∏è –ü—Ä–æ–≥—É–ª–∫–∞ –Ω–∞ —Å–≤–µ–∂–µ–º –≤–æ–∑–¥—É—Ö–µ ‚Äî **30 –º–∏–Ω/–¥–µ–Ω—å**\n"
        "üíß –ü–∏—Ç—å **1.5‚Äì2 –ª–∏—Ç—Ä–∞ –≤–æ–¥—ã** –≤ –¥–µ–Ω—å\n"
        "üò¥ –õ–æ–∂–∏—Ç—å—Å—è –¥–æ 23:00 –∏ —Å–ø–∞—Ç—å –Ω–µ –º–µ–Ω–µ–µ 7‚Äì8 —á–∞—Å–æ–≤\n"
        "üì¥ –¶–∏—Ñ—Ä–æ–≤–æ–π –¥–µ—Ç–æ–∫—Å: **1 —á–∞—Å –±–µ–∑ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ –¥–µ–Ω—å**\n"
        "üßò –ú–µ–¥–∏—Ç–∞—Ü–∏—è/–¥—ã—Ö–∞—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ ‚Äî 5‚Äì10 –º–∏–Ω\n"
        "üçè –ï—Å—Ç—å 4‚Äì5 —Ä–∞–∑ –≤ –¥–µ–Ω—å, –±–µ–∑ –ø–µ—Ä–µ–µ–¥–∞–Ω–∏—è\n"
        "üìì –í–µ—Å—Ç–∏ –¥–Ω–µ–≤–Ω–∏–∫ –ø–∏—Ç–∞–Ω–∏—è –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è (–ø–æ –∂–µ–ª–∞–Ω–∏—é)",
        parse_mode="Markdown"
    )
    await callback.answer()

