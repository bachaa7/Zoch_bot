from aiogram.types import (
    ReplyKeyboardMarkup,
    KeyboardButton,
    InlineKeyboardButton,
    InlineKeyboardMarkup
)

from aiogram.filters.callback_data import CallbackData




class DefinitionCallbackFactory(CallbackData, prefix="definition"):
    concept_idtf: str



# –û—Å–Ω–æ–≤–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
main = ReplyKeyboardMarkup(
    keyboard=[
        [
         KeyboardButton(text='–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª')
         #KeyboardButton(text='–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏')
        ],
        # [
        #  KeyboardButton(text="–ü–æ–∏—Å–∫ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è"),
        #  KeyboardButton(text='–î–æ–±–∞–≤–∏—Ç—å –ø–æ–Ω—è—Ç–∏–µ')
        # ],
        [
            KeyboardButton(text='–æ –Ω–∞—Å'),
            KeyboardButton(text='–æ —Å–∏—Å—Ç–µ–º–µ')
            #KeyboardButton(text='–ü–æ–Ω—è—Ç–∏—è')
        ]
    ],
    resize_keyboard=True,
    input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é..."
)


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ "–æ –Ω–∞—Å"
about_us = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text="–ö–∞–∑–∞—á–µ–Ω–∫–æ", callback_data='Kazachenka')],
        [InlineKeyboardButton(text="–ß–µ—Ä–µ—Ç—É–Ω", callback_data='Cheretyk')],
        [InlineKeyboardButton(text='–ö–æ–≤–∞–ª—å—á—É–∫', callback_data='Kovalchyk')]
    ]
)


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
get_number = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–º–µ—Ä", request_contact=True)]
    ],
    resize_keyboard=True
)


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞
fuction_keyboard = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text="–†–∞—Å—Å—á–∏—Ç–∞—Ç—å –∫–∞–ª–æ—Ä–∏–∏ ", callback_data='calculate_calories')],
        [InlineKeyboardButton(text='–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏',callback_data='recomendation')],
        [InlineKeyboardButton(text="–ü–æ–∏—Å–∫ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è",callback_data='found_defenition')],
        [InlineKeyboardButton(text='–î–æ–±–∞–≤–∏—Ç—å –ø–æ–Ω—è—Ç–∏–µ',callback_data='add_defenition')]
    ]
)

recommend_keyboard = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text="üçΩ –ü–∏—Ç–∞–Ω–∏–µ", callback_data='food_recommend')],
        [InlineKeyboardButton(text="üåø –ü–æ–ª–µ–∑–Ω—ã–µ –ø—Ä–∏–≤—ã—á–∫–∏", callback_data='habits_recommend')]
    ]
)

def definitions_keyboard():
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(
                text="–õ–∏—á–Ω–∞—è –≥–∏–≥–∏–µ–Ω–∞",
                callback_data=DefinitionCallbackFactory(concept_idtf="1_–ª–∏—á–Ω–∞—è –≥–∏–≥–∏–µ–Ω–∞").json()  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–µ—Ç–æ–¥ json()
            )],
            [InlineKeyboardButton(
                text="–ü—Å–∏—Ö–∏—á–µ—Å–∫–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ",
                callback_data=DefinitionCallbackFactory(concept_idtf="1_–ø—Å–∏—Ö–∏—á–µ—Å–∫–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ").json()  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–µ—Ç–æ–¥ json()
            )],


                        [
                InlineKeyboardButton(
                    text="–¢–∏–º–æ—Ö–∞",  # ‚ûï –ù–æ–≤–æ–µ –ø–æ–Ω—è—Ç–∏–µ
                    callback_data=DefinitionCallbackFactory(concept_idtf="Timoha").json()
                )
            ]

        ]
    )




# –ö–Ω–æ–ø–∫–∞ –¥–ª—è –≤—ã–∑–æ–≤–∞ –ø–æ–Ω—è—Ç–∏–π
def concept_button():
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="–í—ã–±—Ä–∞—Ç—å –ø–æ–Ω—è—Ç–∏–µ", callback_data="show_concepts")]
        ]
    )


def add_concept_button():
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å –ø–æ–Ω—è—Ç–∏–µ", callback_data="add_concept")]
        ]
    )





def concept_lookup_button():
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üîç –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ", callback_data="lookup_definition")]
    ])
